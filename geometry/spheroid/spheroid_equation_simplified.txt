x*x + y*y + z*z
 - 2*K1*p1*p1*s1 - 2*K2*p2*p2*s2 - 2*K3*p3*p3*s3
 + 2*K1*K2*p1*p2*q12*s1*s2 + 2*K1*K3*p1*p3*q13*s1*s3 + 2*K2*K3*p2*p3*q23*s2*s3
 - 2*K1*K2*K3*p1*p3*q12*q23*s1*s2*s3
 + K1*K1*p1*p1*s1 + K2*K2*p2*p2*s2 + K3*K3*p3*p3*s3
 + 2*K1*K2*p1*p2*q12*s1*s2 + 2*K1*K3*p1*p3*q13*s1*s3 + 2*K2*K3*p2*p3*q23*s2*s3
 - 2*K1*K2*K3*p1*p2*q13*q23*s1*s2*s3 - 2*K1*K2*K3*p1*p2*q13*q23*s1*s2*s3 - 2*K1*K2*K3*p1*p3*q12*q23*s1*s2*s3
 - 2*K1*K1*K2*p1*p1*q12*q12*s1*s1*s2 - 2*K1*K1*K3*p1*p1*q13*q13*s1*s1*s3 - 2*K2*K2*K3*p2*p2*q23*q23*s2*s2*s3
 - 2*K1*K2*K2*p1*p2*q12*s1*s2 - 2*K1*K3*K3*p1*p3*q13*s1*s3 - 2*K2*K3*K3*p2*p3*q23*s2*s3
 + K2*K2*K3*K3*p2*p2*q23*q23*s2*s2*s3 + K1*K1*K2*K2*p1*p1*q12*q12*s1*s1*s2 + K1*K1*K3*K3*p1*p1*q13*q13*s1*s1*s3
 + 2*K1*K1*K2*K3*p1*p1*q12*q13*q23*s1*s1*s2*s3 + 2*K1*K1*K2*K3*p1*p1*q12*q13*q23*s1*s1*s2*s3
 + 2*K1*K2*K3*K3*p1*p2*q13*q23*s1*s2*s3 + 2*K1*K2*K3*K3*p1*p3*q12*q23*s1*s2*s3
 + 4*K1*K2*K2*K3*p1*p2*q12*q23*q23*s1*s2*s2*s3 - 2*K1*K1*K2*K2*K3*p1*p1*q12*q12*q23*q23*s1*s1*s2*s2*s3
 + K1*K1*K2*K2*K3*K3*p1*p1*q12*q12*q23*q23*s1*s1*s2*s2*s3
 - 2*K1*K2*K2*K3*K3*p1*p2*q12*q23*q23*s1*s2*s2*s3 - 2*K1*K1*K2*K3*K3*p1*p1*q12*q13*q23*s1*s1*s2*s3

=

x*x + y*y + z*z
 + K1*K1*p1*p1*s1 + K2*K2*p2*p2*s2 + K3*K3*p3*p3*s3
 - 2*K1*p1*p1*s1 - 2*K2*p2*p2*s2 - 2*K3*p3*p3*s3

 + 4*K1*K2*p1*p2*q12*s1*s2 + 4*K1*K3*p1*p3*q13*s1*s3 + 4*K2*K3*p2*p3*q23*s2*s3
 - 2*K1*K2*K2*p1*p2*q12*s1*s2 - 2*K1*K3*K3*p1*p3*q13*s1*s3 - 2*K2*K3*K3*p2*p3*q23*s2*s3

 + 2*K1*K2*K3*K3*p1*p2*q13*q23*s1*s2*s3 + 2*K1*K2*K3*K3*p1*p3*q12*q23*s1*s2*s3
 - 4*K1*K2*K3*p1*p2*q13*q23*s1*s2*s3 - 4*K1*K2*K3*p1*p3*q12*q23*s1*s2*s3

 + K1*K1*K2*K2*p1*p1*q12*q12*s1*s1*s2 + K1*K1*K3*K3*p1*p1*q13*q13*s1*s1*s3 + K2*K2*K3*K3*p2*p2*q23*q23*s2*s2*s3
 - 2*K1*K1*K2*p1*p1*q12*q12*s1*s1*s2 - 2*K1*K1*K3*p1*p1*q13*q13*s1*s1*s3 - 2*K2*K2*K3*p2*p2*q23*q23*s2*s2*s3

 + 4*K1*K1*K2*K3*p1*p1*q12*q13*q23*s1*s1*s2*s3 + 4*K1*K2*K2*K3*p1*p2*q12*q23*q23*s1*s2*s2*s3
 - 2*K1*K1*K2*K3*K3*p1*p1*q12*q13*q23*s1*s1*s2*s3 - 2*K1*K2*K2*K3*K3*p1*p2*q12*q23*q23*s1*s2*s2*s3

 + K1*K1*K2*K2*K3*K3*p1*p1*q12*q12*q23*q23*s1*s1*s2*s2*s3 - 2*K1*K1*K2*K2*K3*p1*p1*q12*q12*q23*q23*s1*s1*s2*s2*s3

=

x*x + y*y + z*z
 + (K1 - 2)*K1*p1*p1*s1 + (K2 - 2)*K2*p2*p2*s2 + (K3 - 2)*K3*p3*p3*s3
 + (4 - 2*K2)*K1*K2*p1*p2*q12*s1*s2 + (4 - 2*K3)*K1*K3*p1*p3*q13*s1*s3 + (4 - 2*K2)*K2*K3*p2*p3*q23*s2*s3
 + (2*K3 - 4)*K1*K2*K3*p1*p2*q13*q23*s1*s2*s3 + (2*K3 - 4)*K1*K2*K3*p1*p3*q12*q23*s1*s2*s3
 + (K2 - 2)*K1*K1*K2*p1*p1*q12*q12*s1*s1*s2 + (K3 - 2)*K1*K1*K3*K3*p1*p1*q13*q13*s1*s1*s3 + (K3 - 2)*K2*K2*K3*K3*p2*p2*q23*q23*s2*s2*s3
 + (4 - 2*K3)*K1*K1*K2*K3*p1*p1*q12*q13*q23*s1*s1*s2*s3 + (4 - 2*K3)*K1*K2*K2*K3*p1*p2*q12*q23*q23*s1*s2*s2*s3
 + (K3 - 2)*K1*K1*K2*K2*K3*p1*p1*q12*q12*q23*q23*s1*s1*s2*s2*s3

=

x*x + y*y + z*z
[a1*a1*x*x + b1*b1*y*y + c1*c1*z*z + 2*a1*b1*x*y + 2*a1*c1*x*z + 2*b1*c1*y*z] [(K1 - 2)*K1*s1 + (K2 - 2)*K1*K1*K2*q12*q12*s1*s1*s2 + (K3 - 2)*K1*K1*K3*K3*q13*q13*s1*s1*s3 + (4 - 2*K3)*K1*K1*K2*K3*q12*q13*q23*s1*s1*s2*s3 + (K3 - 2)*K1*K1*K2*K2*K3*q12*q12*q23*q23*s1*s1*s2*s2*s3]
[a2*a2*x*x + b2*b2*y*y + c2*c2*z*z + 2*a2*b2*x*y + 2*a2*c2*x*z + 2*b2*c2*y*z] [(K2 - 2)*K2*s2 + (K3 - 2)*K2*K2*K3*K3*q23*q23*s2*s2*s3]
[a3*a3*x*x + b3*b3*y*y + c3*c3*z*z + 2*a3*b3*x*y + 2*a3*c3*x*z + 2*b3*c3*y*z] [(K3 - 2)*K3*s3]
[a1*a2*x*x + b1*b2*y*y + c1*c2*z*z + a1*b2*x*y + a2*b1*x*y + a1*c2*x*z + a2*c1*x*z + b1*c2*y*z + b2*c1*y*z] [(4 - 2*K2)*K1*K2*q12*s1*s2 + (2*K3 - 4)*K1*K2*K3*q13*q23*s1*s2*s3 + (4 - 2*K3)*K1*K2*K2*K3*q12*q23*q23*s1*s2*s2*s3]
[a1*a3*x*x + b1*b3*y*y + c1*c3*z*z + a1*b3*x*y + a3*b1*x*y + a1*c3*x*z + a3*c1*x*z + b1*c3*y*z + b3*c1*y*z] [(4 - 2*K3)*K1*K3*q13*s1*s3 + (2*K3 - 4)*K1*K2*K3*q12*q23*s1*s2*s3]
[a2*a3*x*x + b2*b3*y*y + c2*c3*z*z + a2*b3*x*y + a3*b2*x*y + a2*c3*x*z + a3*c2*x*z + b2*c3*y*z + b3*c2*y*z] [(4 - 2*K2)*K2*K3*p2*p3*q23*s2*s3]

=

x*x [1 + (K1 - 2)*K1*a1*a1*s1 + (K2 - 2)*K1*K1*K2*a1*a1*q12*q12*s1*s1*s2 + (K3 - 2)*K1*K1*K3*K3*a1*a1*q13*q13*s1*s1*s3 + (4 - 2*K3)*K1*K1*K2*K3*a1*a1*q12*q13*q23*s1*s1*s2*s3 + (K3 - 2)*K1*K1*K2*K2*K3*a1*a1*q12*q12*q23*q23*s1*s1*s2*s2*s3 + (K2 - 2)*K2*a2*a2*s2 + (K3 - 2)*K2*K2*K3*K3*a2*a2*q23*q23*s2*s2*s3 + (K3 - 3)*K3*a3*a3*s3 + (4 - 2*K2)*K1*K2*a1*a2*q12*s1*s2 + (2*K3 - 4)*K1*K2*K3*a1*a2*q13*q23*s1*s2*s3 + (4 - 2*K3)*K1*K2*K2*K3*a1*a2*q12*q23*q23*s1*s2*s2*s3 + (4 - 2*K3)*K1*K3*a1*a3*q13*s1*s3 + (2*K3 - 4)*K1*K2*K3*a1*a3*q12*q23*s1*s2*s3 + (4 - 2*K2)*K2*K3*a2*a3*p2*p3*q23*s2*s3]

y*y [1 + (K1 - 2)*K1*b1*b1*s1 + (K2 - 2)*K1*K1*K2*b1*b1*q12*q12*s1*s1*s2 + (K3 - 2)*K1*K1*K3*K3*b1*b1*q13*q13*s1*s1*s3 + (4 - 2*K3)*K1*K1*K2*K3*b1*b1*q12*q13*q23*s1*s1*s2*s3 + (K3 - 2)*K1*K1*K2*K2*K3*b1*b1*q12*q12*q23*q23*s1*s1*s2*s2*s3 + (K2 - 2)*K2*b2*b2*s2 + (K3 - 2)*K2*K2*K3*K3*b2*b2*q23*q23*s2*s2*s3 + (K3 - 3)*K3*b3*b3*s3 + (4 - 2*K2)*K1*K2*b1*b2*q12*s1*s2 + (2*K3 - 4)*K1*K2*K3*b1*b2*q13*q23*s1*s2*s3 + (4 - 2*K3)*K1*K2*K2*K3*b1*b2*q12*q23*q23*s1*s2*s2*s3 + (4 - 2*K3)*K1*K3*b1*b3*q13*s1*s3 + (2*K3 - 4)*K1*K2*K3*b1*b3*q12*q23*s1*s2*s3 + (4 - 2*K2)*K2*K3*b2*b3*p2*p3*q23*s2*s3]

z*z [1 + (K1 - 2)*K1*c1*c1*s1 + (K2 - 2)*K1*K1*K2*c1*c1*q12*q12*s1*s1*s2 + (K3 - 2)*K1*K1*K3*K3*c1*c1*q13*q13*s1*s1*s3 + (4 - 2*K3)*K1*K1*K2*K3*c1*c1*q12*q13*q23*s1*s1*s2*s3 + (K3 - 2)*K1*K1*K2*K2*K3*c1*c1*q12*q12*q23*q23*s1*s1*s2*s2*s3 + (K2 - 2)*K2*c2*c2*s2 + (K3 - 2)*K2*K2*K3*K3*c2*c2*q23*q23*s2*s2*s3 + (K3 - 3)*K3*c3*c3*s3 + (4 - 2*K2)*K1*K2*c1*c2*q12*s1*s2 + (2*K3 - 4)*K1*K2*K3*c1*c2*q13*q23*s1*s2*s3 + (4 - 2*K3)*K1*K2*K2*K3*c1*c2*q12*q23*q23*s1*s2*s2*s3 + (4 - 2*K3)*K1*K3*c1*c3*q13*s1*s3 + (2*K3 - 4)*K1*K2*K3*c1*c3*q12*q23*s1*s2*s3 + (4 - 2*K2)*K2*K3*c2*c3*p2*p3*q23*s2*s3]

x*y [(2*K1 - 4)*K1*a1*b1*s1 + (2*K2 - 4)*K1*K1*K2*a1*b1*q12*q12*s1*s1*s2 + (2*K3 - 4)*K1*K1*K3*K3*a1*b1*q13*q13*s1*s1*s3 + (8 - 4*K3)*K1*K1*K2*K3*a1*b1*q12*q13*q23*s1*s1*s2*s3 + (2*K3 - 4)*K1*K1*K2*K2*K3*a1*b1*q12*q12*q23*q23*s1*s1*s2*s2*s3 + (2*K2 - 4)*K2*a2*b2*s2 + (2*K3 - 4)*K2*K2*K3*K3*a2*b2*q23*q23*s2*s2*s3 + (2*K3 - 4)*K3*a3*b3*s3]